SET NAMES utf8mb4;

SET FOREIGN_KEY_CHECKS = 0;

-- =============================================
-- 核心用户和权限管理
-- =============================================

-- 1. users (用户/专家表)
DROP TABLE IF EXISTS `USERS`;
CREATE TABLE `USERS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '用户ID',
    `USERNAME` VARCHAR(255) UNIQUE NOT NULL COMMENT '用户名',
    `PASSWORD` VARCHAR(255) NOT NULL COMMENT '密码',
    `NAME` VARCHAR(255) NULL COMMENT '姓名',
    `ROLE` ENUM('ADMIN', 'CURATOR', 'EXPERT', 'ANNOTATOR', 'REFEREE', 'CROWDSOURCE_USER') NOT NULL COMMENT '用户角色，决定其系统权限',
    `CONTACT_INFO` VARCHAR(255) NULL COMMENT '联系方式',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `UPDATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记，非空表示已删除',
    INDEX `IDX_USERS_ROLE` (`ROLE`),
    INDEX `IDX_USERS_DELETED` (`DELETED_AT`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='用户/专家表';

-- =============================================
-- 原始数据采集
-- =============================================

-- 2. raw_questions (原始问题表)
DROP TABLE IF EXISTS `RAW_QUESTIONS`;
CREATE TABLE `RAW_QUESTIONS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '原始问题ID',
    `SOURCE_URL` VARCHAR(512) UNIQUE NOT NULL COMMENT '原始来源URL',
    `SOURCE_SITE` VARCHAR(255) NULL COMMENT '原始站点名称',
    `TITLE` VARCHAR(512) NOT NULL COMMENT '标题',
    `CONTENT` TEXT NULL COMMENT '问题描述或详细内容',
    `CRAWL_TIME` DATETIME NOT NULL COMMENT '抓取时间',
    `TAGS` JSON NULL COMMENT '标签列表，例如: ["医学", "疾病", "治疗"]',
    `OTHER_METADATA` JSON NULL COMMENT '存储原始站点的其他信息 (e.g., 原始ID, 作者)',
    INDEX `IDX_RAW_QUESTIONS_SITE_TIME` (`SOURCE_SITE`, `CRAWL_TIME`),
    INDEX `IDX_RAW_QUESTIONS_CRAWL_TIME` (`CRAWL_TIME`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='原始问题表';

-- 3. raw_answers (原始回答表)
DROP TABLE IF EXISTS `RAW_ANSWERS`;
CREATE TABLE `RAW_ANSWERS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '原始回答ID',
    `RAW_QUESTION_ID` BIGINT NOT NULL COMMENT '关联的原始问题ID',
    `AUTHOR_INFO` VARCHAR(255) NULL COMMENT '回答者信息',
    `CONTENT` TEXT NOT NULL COMMENT '回答内容',
    `PUBLISH_TIME` DATETIME NULL COMMENT '发布时间',
    `UPVOTES` INT DEFAULT 0 COMMENT '点赞数',
    `IS_ACCEPTED` BOOLEAN NULL COMMENT '是否被采纳为最佳答案',
    `OTHER_METADATA` JSON NULL COMMENT '存储原始站点的其他信息',
    FOREIGN KEY (`RAW_QUESTION_ID`) REFERENCES `RAW_QUESTIONS`(`ID`) ON DELETE CASCADE,
    INDEX `IDX_RAW_ANSWERS_QUESTION` (`RAW_QUESTION_ID`),
    INDEX `IDX_RAW_ANSWERS_ACCEPTED` (`IS_ACCEPTED`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='原始回答表';

-- =============================================
-- 变更日志系统
-- =============================================

-- 4. change_log (变更日志主表)
DROP TABLE IF EXISTS `CHANGE_LOG`;
CREATE TABLE `CHANGE_LOG` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '变更日志ID',
    `CHANGE_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '变更时间',
    `CHANGED_BY_USER_ID` BIGINT NOT NULL COMMENT '变更用户ID',
    `CHANGE_TYPE` VARCHAR(255) NOT NULL COMMENT '变更集的总体类型',
    `COMMIT_MESSAGE` TEXT NULL COMMENT '类似Git的提交消息，描述本次变更的目的或内容',
    `ASSOCIATED_STANDARD_QUESTION_ID` BIGINT NULL COMMENT '本次变更集主要关联的标准问题ID',
    FOREIGN KEY (`CHANGED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    INDEX `IDX_CHANGE_LOG_USER_TIME` (`CHANGED_BY_USER_ID`, `CHANGE_TIME`),
    INDEX `IDX_CHANGE_LOG_QUESTION` (`ASSOCIATED_STANDARD_QUESTION_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='变更日志主表';

-- 5. change_log_details (变更日志详情表)
DROP TABLE IF EXISTS `CHANGE_LOG_DETAILS`;
CREATE TABLE `CHANGE_LOG_DETAILS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '变更日志详情ID',
    `CHANGE_LOG_ID` BIGINT NOT NULL COMMENT '关联到所属的变更日志主条目',
    `ENTITY_TYPE` ENUM( 'STANDARD_QUESTION', 'STD_OBJECTIVE_ANSWER', 'STD_SIMPLE_ANSWER', 'STD_SUBJECTIVE_ANSWER', 'STANDARD_OBJECTIVE_ANSWER', 'STANDARD_SIMPLE_ANSWER', 'STANDARD_SUBJECTIVE_ANSWER', 'CHECKLIST_ITEM', 'EVAL_CRITERION', 'AI_PROMPT', 'TAG', 'DATASET_VERSION', 'LLM_MODEL', 'EVALUATOR', 'STANDARD_QUESTION_TAGS', 'DATASET_QUESTION_MAPPING', 'ANSWER_TAG_PROMPT', 'ANSWER_QUESTION_TYPE_PROMPT', 'EVALUATION_TAG_PROMPT', 'EVALUATION_SUBJECTIVE_PROMPT', 'ANSWER_PROMPT_ASSEMBLY_CONFIG', 'EVALUATION_PROMPT_ASSEMBLY_CONFIG', 'AI_PROMPT_TAGS' ) NOT NULL COMMENT '发生变更的实体类型',
    `ENTITY_ID` BIGINT NOT NULL COMMENT '发生变更的具体实体记录的ID',
    `ATTRIBUTE_NAME` VARCHAR(255) NOT NULL COMMENT '发生变更的字段名称',
    `OLD_VALUE` JSON NULL COMMENT '字段变更前的值',
    `NEW_VALUE` JSON NULL COMMENT '字段变更后的值',
    FOREIGN KEY (`CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE CASCADE,
    INDEX `IDX_CHANGE_DETAILS_LOG` (`CHANGE_LOG_ID`),
    INDEX `IDX_CHANGE_DETAILS_ENTITY` (`ENTITY_TYPE`, `ENTITY_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='变更日志详情表';

-- =============================================
-- 标准问题体系
-- =============================================

-- 6. standard_questions (标准问题基表)
DROP TABLE IF EXISTS `STANDARD_QUESTIONS`;
CREATE TABLE `STANDARD_QUESTIONS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标准问题ID',
    `ORIGINAL_RAW_QUESTION_ID` BIGINT NULL COMMENT '如果源自原始数据，链接到原始问题',
    `QUESTION_TEXT` TEXT NOT NULL COMMENT '问题文本',
    `QUESTION_TYPE` ENUM('SINGLE_CHOICE', 'MULTIPLE_CHOICE', 'SIMPLE_FACT', 'SUBJECTIVE') NOT NULL COMMENT '问题类型',
    `DIFFICULTY` ENUM('EASY', 'MEDIUM', 'HARD') NULL COMMENT '难度',
    `CREATION_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `CREATED_BY_USER_ID` BIGINT NOT NULL COMMENT '创建者用户ID',
    `PARENT_STANDARD_QUESTION_ID` BIGINT NULL COMMENT '指向该问题的前一个版本，用于版本控制链',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此特定版本标准问题的 change_log 条目',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记，非空表示已删除',
    FOREIGN KEY (`ORIGINAL_RAW_QUESTION_ID`) REFERENCES `RAW_QUESTIONS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`PARENT_STANDARD_QUESTION_ID`) REFERENCES `STANDARD_QUESTIONS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_STANDARD_QUESTIONS_TYPE_DIFFICULTY` (`QUESTION_TYPE`, `DIFFICULTY`),
    INDEX `IDX_STANDARD_QUESTIONS_CREATOR_TIME` (`CREATED_BY_USER_ID`, `CREATION_TIME`),
    INDEX `IDX_STANDARD_QUESTIONS_DELETED` (`DELETED_AT`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='标准问题基表';

-- Add FK for associated_standard_question_id in change_log
ALTER TABLE `CHANGE_LOG`
    ADD CONSTRAINT `FK_CHANGE_LOG_ASSOC_SQ` FOREIGN KEY (
        `ASSOCIATED_STANDARD_QUESTION_ID`
    )
        REFERENCES `STANDARD_QUESTIONS`(`ID`) ON DELETE SET NULL;

-- 7. expert_candidate_answers (专家候选答案表)
DROP TABLE IF EXISTS `EXPERT_CANDIDATE_ANSWERS`;
CREATE TABLE `EXPERT_CANDIDATE_ANSWERS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '专家候选答案ID',
    `STANDARD_QUESTION_ID` BIGINT NOT NULL COMMENT '关联的标准问题ID',
    `USER_ID` BIGINT NOT NULL COMMENT '提交候选答案的用户',
    `CANDIDATE_ANSWER_TEXT` TEXT NOT NULL COMMENT '专家提交的候选答案文本',
    `SUBMISSION_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '提交时间',
    `QUALITY_SCORE` INT NULL COMMENT '可选的质量评分',
    `FEEDBACK` TEXT NULL COMMENT '可选的反馈或备注',
    FOREIGN KEY (`STANDARD_QUESTION_ID`) REFERENCES `STANDARD_QUESTIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE,
    INDEX `IDX_CANDIDATE_ANSWERS_QUESTION` (`STANDARD_QUESTION_ID`),
    INDEX `IDX_CANDIDATE_ANSWERS_USER_TIME` (`USER_ID`, `SUBMISSION_TIME`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='专家候选答案表';

-- 8. crowdsourced_answers (众包答案表)
DROP TABLE IF EXISTS `CROWDSOURCED_ANSWERS`;
CREATE TABLE `CROWDSOURCED_ANSWERS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '众包答案ID',
    `STANDARD_QUESTION_ID` BIGINT NOT NULL COMMENT '问题ID',
    `USER_ID` BIGINT NOT NULL COMMENT '提供答案的用户ID',
    `ANSWER_TEXT` TEXT NOT NULL COMMENT '用户提交的答案文本',
    `SUBMISSION_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '提交时间',
    `TASK_BATCH_ID` BIGINT NULL COMMENT '众包任务批次ID',
    `QUALITY_REVIEW_STATUS` ENUM('PENDING', 'ACCEPTED', 'REJECTED', 'FLAGGED') DEFAULT 'PENDING' COMMENT '众包答案的质量审核状态',
    `REVIEWED_BY_USER_ID` BIGINT NULL COMMENT '审核该众包答案的用户ID',
    `REVIEW_TIME` DATETIME NULL COMMENT '审核时间',
    `REVIEW_FEEDBACK` TEXT NULL COMMENT '审核反馈',
    `OTHER_METADATA` JSON NULL COMMENT '存储其他众包相关元数据',
    UNIQUE (`STANDARD_QUESTION_ID`, `USER_ID`, `TASK_BATCH_ID`) COMMENT '确保一个用户在一个任务批次中对同一个问题只提交一次答案',
    FOREIGN KEY (`STANDARD_QUESTION_ID`) REFERENCES `STANDARD_QUESTIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`REVIEWED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_CROWDSOURCED_STATUS` (`QUALITY_REVIEW_STATUS`),
    INDEX `IDX_CROWDSOURCED_REVIEWER_TIME` (`REVIEWED_BY_USER_ID`, `REVIEW_TIME`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='众包答案表';

-- =============================================
-- 标准答案体系
-- =============================================

-- 9. standard_objective_answers (标准客观题答案表)
DROP TABLE IF EXISTS `STANDARD_OBJECTIVE_ANSWERS`;
CREATE TABLE `STANDARD_OBJECTIVE_ANSWERS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标准客观题答案ID',
    `STANDARD_QUESTION_ID` BIGINT UNIQUE NOT NULL COMMENT '与标准问题一对一关联',
    `OPTIONS` JSON NOT NULL COMMENT '所有选项的列表',
    `CORRECT_IDS` JSON NOT NULL COMMENT '正确选项的ID列表',
    `DETERMINED_BY_USER_ID` BIGINT NOT NULL COMMENT '确定此标准答案的用户',
    `DETERMINED_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '确定时间',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此答案记录的 change_log 条目',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`STANDARD_QUESTION_ID`) REFERENCES `STANDARD_QUESTIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`DETERMINED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='标准客观题答案表';

-- 10. standard_simple_answers (标准简单题答案表)
DROP TABLE IF EXISTS `STANDARD_SIMPLE_ANSWERS`;
CREATE TABLE `STANDARD_SIMPLE_ANSWERS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标准简单题答案ID',
    `STANDARD_QUESTION_ID` BIGINT UNIQUE NOT NULL COMMENT '与标准问题一对一关联',
    `ANSWER_TEXT` TEXT NOT NULL COMMENT '主要的标准短回答文本',
    `ALTERNATIVE_ANSWERS` JSON NULL COMMENT '可接受的同义词列表或变体',
    `DETERMINED_BY_USER_ID` BIGINT NOT NULL COMMENT '确定此标准答案的用户',
    `DETERMINED_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '确定时间',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此答案记录的 change_log 条目',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`STANDARD_QUESTION_ID`) REFERENCES `STANDARD_QUESTIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`DETERMINED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='标准简单题答案表';

-- 11. standard_subjective_answers (标准主观题答案表)
DROP TABLE IF EXISTS `STANDARD_SUBJECTIVE_ANSWERS`;
CREATE TABLE `STANDARD_SUBJECTIVE_ANSWERS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标准主观题答案ID',
    `STANDARD_QUESTION_ID` BIGINT UNIQUE NOT NULL COMMENT '与标准问题一对一关联',
    `ANSWER_TEXT` TEXT NOT NULL COMMENT '完整的标准长回答文本',
    `SCORING_GUIDANCE` TEXT NULL COMMENT '对评测员或裁判AI的评分指导说明',
    `DETERMINED_BY_USER_ID` BIGINT NOT NULL COMMENT '确定此标准答案的用户',
    `DETERMINED_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '确定时间',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此答案记录的 change_log 条目',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`STANDARD_QUESTION_ID`) REFERENCES `STANDARD_QUESTIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`DETERMINED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='标准主观题答案表';

-- =============================================
-- 标签体系
-- =============================================

-- 12. tags (标签表)
DROP TABLE IF EXISTS `TAGS`;
CREATE TABLE `TAGS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标签ID',
    `TAG_NAME` VARCHAR(255) UNIQUE NOT NULL COMMENT '标签名称',
    `TAG_TYPE` VARCHAR(255) NULL COMMENT '标签类型 (e.g., 疾病, 症状, 治疗)',
    `DESCRIPTION` TEXT NULL COMMENT '标签描述',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '谁创建的标签',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此标签的 change_log 条目',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_TAGS_TYPE` (`TAG_TYPE`),
    INDEX `IDX_TAGS_DELETED` (`DELETED_AT`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='标签表';

-- 13. standard_question_tags (标准问题-标签关联表)
DROP TABLE IF EXISTS `STANDARD_QUESTION_TAGS`;
CREATE TABLE `STANDARD_QUESTION_TAGS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标准问题-标签关联ID',
    `STANDARD_QUESTION_ID` BIGINT NOT NULL COMMENT '标准问题ID',
    `TAG_ID` BIGINT NOT NULL COMMENT '标签ID',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '创建者用户ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此关联的 change_log 条目',
    FOREIGN KEY (`STANDARD_QUESTION_ID`) REFERENCES `STANDARD_QUESTIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`TAG_ID`) REFERENCES `TAGS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    UNIQUE (`STANDARD_QUESTION_ID`, `TAG_ID`) COMMENT '防止重复标签',
    INDEX `IDX_QUESTION_TAGS_QUESTION` (`STANDARD_QUESTION_ID`),
    INDEX `IDX_QUESTION_TAGS_TAG` (`TAG_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='标准问题-标签关联表';

-- 14. raw_question_tags (原始问题-标签关联表)
DROP TABLE IF EXISTS `RAW_QUESTION_TAGS`;
CREATE TABLE `RAW_QUESTION_TAGS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '原始问题-标签关联ID',
    `RAW_QUESTION_ID` BIGINT NOT NULL COMMENT '原始问题ID',
    `TAG_ID` BIGINT NOT NULL COMMENT '标签ID',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '创建者用户ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此关联的 change_log 条目',
    FOREIGN KEY (`RAW_QUESTION_ID`) REFERENCES `RAW_QUESTIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`TAG_ID`) REFERENCES `TAGS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    UNIQUE (`RAW_QUESTION_ID`, `TAG_ID`) COMMENT '防止重复标签'
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='原始问题-标签关联表';

-- =============================================
-- 回答场景的Prompt系统
-- =============================================

-- 15. answer_tag_prompts (回答场景的标签提示词表)
DROP TABLE IF EXISTS `ANSWER_TAG_PROMPTS`;
CREATE TABLE `ANSWER_TAG_PROMPTS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '回答标签提示词ID',
    `TAG_ID` BIGINT NOT NULL COMMENT '关联的标签ID',
    `NAME` VARCHAR(255) NOT NULL COMMENT '提示词名称',
    `PROMPT_TEMPLATE` TEXT NOT NULL COMMENT '标签相关的prompt片段',
    `DESCRIPTION` TEXT NULL COMMENT '提示词描述',
    `IS_ACTIVE` BOOLEAN NOT NULL DEFAULT TRUE COMMENT '是否激活使用',
    `PROMPT_PRIORITY` INT NOT NULL DEFAULT 50 COMMENT 'prompt优先级，数字越小越靠前',
    `VERSION` VARCHAR(50) NULL COMMENT '版本号',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `UPDATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    `CREATED_BY_USER_ID` BIGINT NOT NULL COMMENT '创建者用户ID',
    `PARENT_PROMPT_ID` BIGINT NULL COMMENT '父版本ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联的变更日志ID',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`TAG_ID`) REFERENCES `TAGS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`PARENT_PROMPT_ID`) REFERENCES `ANSWER_TAG_PROMPTS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_ANSWER_TAG_ACTIVE_PRIORITY` (`TAG_ID`, `IS_ACTIVE`, `PROMPT_PRIORITY`),
    INDEX `IDX_ANSWER_TAG_VERSION` (`TAG_ID`, `VERSION`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='回答场景的标签提示词表';

-- 16. answer_question_type_prompts (回答场景的题型提示词表)
DROP TABLE IF EXISTS `ANSWER_QUESTION_TYPE_PROMPTS`;
CREATE TABLE `ANSWER_QUESTION_TYPE_PROMPTS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '回答题型提示词ID',
    `NAME` VARCHAR(255) NOT NULL COMMENT '提示词名称',
    `QUESTION_TYPE` ENUM('SINGLE_CHOICE', 'MULTIPLE_CHOICE', 'SIMPLE_FACT', 'SUBJECTIVE') NOT NULL COMMENT '题型',
    `PROMPT_TEMPLATE` TEXT NOT NULL COMMENT '题型相关的prompt片段',
    `DESCRIPTION` TEXT NULL COMMENT '描述',
    `IS_ACTIVE` BOOLEAN NOT NULL DEFAULT TRUE COMMENT '是否激活',
    `RESPONSE_FORMAT_INSTRUCTION` TEXT NULL COMMENT '回答格式要求',
    `RESPONSE_EXAMPLE` TEXT NULL COMMENT '回答示例',
    `VERSION` VARCHAR(50) NULL COMMENT '版本号',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `UPDATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    `CREATED_BY_USER_ID` BIGINT NOT NULL COMMENT '创建者用户ID',
    `PARENT_PROMPT_ID` BIGINT NULL COMMENT '父版本ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联的变更日志ID',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`PARENT_PROMPT_ID`) REFERENCES `ANSWER_QUESTION_TYPE_PROMPTS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_ANSWER_TYPE_ACTIVE` (`QUESTION_TYPE`, `IS_ACTIVE`),
    INDEX `IDX_ANSWER_TYPE_VERSION` (`QUESTION_TYPE`, `VERSION`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='回答场景的题型提示词表';

-- 17. answer_prompt_assembly_configs (回答场景的prompt组装配置表)
DROP TABLE IF EXISTS `ANSWER_PROMPT_ASSEMBLY_CONFIGS`;
CREATE TABLE `ANSWER_PROMPT_ASSEMBLY_CONFIGS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '回答Prompt组装配置ID',
    `NAME` VARCHAR(255) NOT NULL COMMENT '配置名称',
    `DESCRIPTION` TEXT NULL COMMENT '描述',
    `BASE_SYSTEM_PROMPT` TEXT NULL COMMENT '基础系统prompt',
    `TAG_PROMPTS_SECTION_HEADER` VARCHAR(255) NULL DEFAULT '## 专业知识指导' COMMENT '标签prompts部分的标题',
    `QUESTION_TYPE_SECTION_HEADER` VARCHAR(255) NULL DEFAULT '## 回答要求' COMMENT '题型prompt部分的标题',
    `TAG_PROMPT_SEPARATOR` VARCHAR(100) NULL DEFAULT '\n\n' COMMENT '标签prompts之间的分隔符',
    `SECTION_SEPARATOR` VARCHAR(100) NULL DEFAULT '\n\n' COMMENT '不同部分之间的分隔符',
    `FINAL_INSTRUCTION` TEXT NULL COMMENT '最终指令',
    `IS_ACTIVE` BOOLEAN NOT NULL DEFAULT TRUE COMMENT '是否激活',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `UPDATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    `CREATED_BY_USER_ID` BIGINT NOT NULL COMMENT '创建者用户ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联的变更日志ID',
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_ANSWER_CONFIG_ACTIVE` (`IS_ACTIVE`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='回答场景的prompt组装配置表';

-- =============================================
-- 评测场景的Prompt系统
-- =============================================

-- 18. evaluation_tag_prompts (评测场景的标签提示词表)
DROP TABLE IF EXISTS `EVALUATION_TAG_PROMPTS`;
CREATE TABLE `EVALUATION_TAG_PROMPTS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评测标签提示词ID',
    `TAG_ID` BIGINT NOT NULL COMMENT '关联的标签ID',
    `NAME` VARCHAR(255) NOT NULL COMMENT '提示词名称',
    `PROMPT_TEMPLATE` TEXT NOT NULL COMMENT '评测相关的标签prompt片段',
    `DESCRIPTION` TEXT NULL COMMENT '描述',
    `IS_ACTIVE` BOOLEAN NOT NULL DEFAULT TRUE COMMENT '是否激活',
    `PROMPT_PRIORITY` INT NOT NULL DEFAULT 50 COMMENT 'prompt优先级',
    `VERSION` VARCHAR(50) NULL COMMENT '版本号',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `UPDATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    `CREATED_BY_USER_ID` BIGINT NOT NULL COMMENT '创建者用户ID',
    `PARENT_PROMPT_ID` BIGINT NULL COMMENT '父版本ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联的变更日志ID',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`TAG_ID`) REFERENCES `TAGS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`PARENT_PROMPT_ID`) REFERENCES `EVALUATION_TAG_PROMPTS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_EVAL_TAG_ACTIVE_PRIORITY` (`TAG_ID`, `IS_ACTIVE`, `PROMPT_PRIORITY`),
    INDEX `IDX_EVAL_TAG_VERSION` (`TAG_ID`, `VERSION`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='评测场景的标签提示词表';

-- 19. evaluation_subjective_prompts (评测场景的主观题提示词表)
DROP TABLE IF EXISTS `EVALUATION_SUBJECTIVE_PROMPTS`;
CREATE TABLE `EVALUATION_SUBJECTIVE_PROMPTS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评测主观题提示词ID',
    `NAME` VARCHAR(255) NOT NULL COMMENT '名称',
    `PROMPT_TEMPLATE` TEXT NOT NULL COMMENT '主观题评测的prompt片段',
    `DESCRIPTION` TEXT NULL COMMENT '描述',
    `EVALUATION_CRITERIA_FOCUS` JSON NULL COMMENT '重点关注的评测标准ID列表',
    `SCORING_INSTRUCTION` TEXT NULL COMMENT '评分指导',
    `OUTPUT_FORMAT_INSTRUCTION` TEXT NULL COMMENT '输出格式要求',
    `IS_ACTIVE` BOOLEAN NOT NULL DEFAULT TRUE COMMENT '是否激活',
    `VERSION` VARCHAR(50) NULL COMMENT '版本号',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `UPDATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    `CREATED_BY_USER_ID` BIGINT NOT NULL COMMENT '创建者用户ID',
    `PARENT_PROMPT_ID` BIGINT NULL COMMENT '父版本ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联的变更日志ID',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`PARENT_PROMPT_ID`) REFERENCES `EVALUATION_SUBJECTIVE_PROMPTS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_EVAL_SUBJ_ACTIVE` (`IS_ACTIVE`),
    INDEX `IDX_EVAL_SUBJ_VERSION` (`VERSION`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='评测场景的主观题提示词表';

-- 20. evaluation_prompt_assembly_configs (评测场景的prompt组装配置表)
DROP TABLE IF EXISTS `EVALUATION_PROMPT_ASSEMBLY_CONFIGS`;
CREATE TABLE `EVALUATION_PROMPT_ASSEMBLY_CONFIGS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评测Prompt组装配置ID',
    `NAME` VARCHAR(255) NOT NULL COMMENT '名称',
    `DESCRIPTION` TEXT NULL COMMENT '描述',
    `BASE_SYSTEM_PROMPT` TEXT NULL COMMENT '评测基础系统prompt',
    `TAG_PROMPTS_SECTION_HEADER` VARCHAR(255) NULL DEFAULT '## 专业评测标准' COMMENT '标签prompts部分标题',
    `SUBJECTIVE_SECTION_HEADER` VARCHAR(255) NULL DEFAULT '## 主观题评测要求' COMMENT '主观题评测部分标题',
    `TAG_PROMPT_SEPARATOR` VARCHAR(100) NULL DEFAULT '\n\n' COMMENT '标签prompts之间的分隔符',
    `SECTION_SEPARATOR` VARCHAR(100) NULL DEFAULT '\n\n' COMMENT '章节分隔符',
    `FINAL_INSTRUCTION` TEXT NULL COMMENT '最终评测指令',
    `IS_ACTIVE` BOOLEAN NOT NULL DEFAULT TRUE COMMENT '是否激活',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `UPDATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    `CREATED_BY_USER_ID` BIGINT NOT NULL COMMENT '创建者用户ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联的变更日志ID',
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_EVAL_CONFIG_ACTIVE` (`IS_ACTIVE`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='评测场景的prompt组装配置表';

-- =============================================
-- 数据集版本管理
-- =============================================

-- 21. dataset_versions (数据集版本表)
DROP TABLE IF EXISTS `DATASET_VERSIONS`;
CREATE TABLE `DATASET_VERSIONS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '数据集版本ID',
    `VERSION_NUMBER` VARCHAR(255) UNIQUE NOT NULL COMMENT '版本号 (e.g., "v1.0.0")',
    `NAME` VARCHAR(255) NOT NULL COMMENT '数据集名称',
    `DESCRIPTION` TEXT NULL COMMENT '数据集描述',
    `CREATION_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `CREATED_BY_USER_ID` BIGINT NOT NULL COMMENT '创建者用户ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此数据集版本的 change_log 条目',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_DATASET_VERSIONS_TIME` (`CREATION_TIME`),
    INDEX `IDX_DATASET_VERSIONS_CREATOR` (`CREATED_BY_USER_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='数据集版本表';

-- 22. dataset_question_mapping (数据集-问题映射表)
DROP TABLE IF EXISTS `DATASET_QUESTION_MAPPING`;
CREATE TABLE `DATASET_QUESTION_MAPPING` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '数据集-问题映射ID',
    `DATASET_VERSION_ID` BIGINT NOT NULL COMMENT '数据集版本ID',
    `STANDARD_QUESTION_ID` BIGINT NOT NULL COMMENT '标准问题ID',
    `ORDER_IN_DATASET` INT NULL COMMENT '在数据集中的顺序',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '创建者用户ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此映射的 change_log 条目',
    FOREIGN KEY (`DATASET_VERSION_ID`) REFERENCES `DATASET_VERSIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`STANDARD_QUESTION_ID`) REFERENCES `STANDARD_QUESTIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    UNIQUE (`DATASET_VERSION_ID`, `STANDARD_QUESTION_ID`) COMMENT '防止同一问题在同一数据集版本中重复出现',
    INDEX `IDX_DATASET_MAPPING_DATASET` (`DATASET_VERSION_ID`, `ORDER_IN_DATASET`),
    INDEX `IDX_DATASET_MAPPING_QUESTION` (`STANDARD_QUESTION_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='数据集-问题映射表';

-- =============================================
-- LLM模型和评测系统
-- =============================================

-- 23. llm_models (LLM模型表)
DROP TABLE IF EXISTS `LLM_MODELS`;
CREATE TABLE `LLM_MODELS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT 'LLM模型ID',
    `NAME` VARCHAR(255) NOT NULL COMMENT '模型名称',
    `PROVIDER` VARCHAR(255) NULL COMMENT '模型提供商',
    `VERSION` VARCHAR(255) NULL COMMENT '模型版本',
    `DESCRIPTION` TEXT NULL COMMENT '模型描述',
    `API_URL` VARCHAR(512) NULL COMMENT 'API接口地址',
    `API_KEY` VARCHAR(512) NULL COMMENT 'API密钥',
    `API_TYPE` VARCHAR(50) NULL COMMENT '调用方式或接口类型，如OpenAI、Azure、Anthropic等',
    `MODEL_PARAMETERS` JSON NULL COMMENT '默认模型参数',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '创建者用户ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此模型记录的 change_log 条目',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_LLM_MODELS_PROVIDER` (`PROVIDER`),
    INDEX `IDX_LLM_MODELS_API_TYPE` (`API_TYPE`),
    INDEX `IDX_LLM_MODELS_DELETED` (`DELETED_AT`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='LLM模型表';

-- 24. answer_generation_batches (回答生成批次表)
DROP TABLE IF EXISTS `ANSWER_GENERATION_BATCHES`;
CREATE TABLE `ANSWER_GENERATION_BATCHES` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '回答生成批次ID',
    `NAME` VARCHAR(255) NOT NULL COMMENT '回答生成批次名称',
    `DESCRIPTION` TEXT NULL COMMENT '回答生成批次描述',
    `DATASET_VERSION_ID` BIGINT NOT NULL COMMENT '使用的数据集版本',
    `CREATION_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `STATUS` ENUM('PENDING', 'GENERATING_ANSWERS', 'COMPLETED', 'FAILED', 'PAUSED', 'RESUMING') NOT NULL DEFAULT 'PENDING' COMMENT '整体状态',
    `ANSWER_ASSEMBLY_CONFIG_ID` BIGINT NULL COMMENT '回答阶段使用的prompt组装配置',
    `SINGLE_CHOICE_PROMPT_ID` BIGINT NULL COMMENT '单选题prompt',
    `MULTIPLE_CHOICE_PROMPT_ID` BIGINT NULL COMMENT '多选题prompt',
    `SIMPLE_FACT_PROMPT_ID` BIGINT NULL COMMENT '简单事实题prompt',
    `SUBJECTIVE_PROMPT_ID` BIGINT NULL COMMENT '主观题prompt',
    `GLOBAL_PARAMETERS` JSON NULL COMMENT '应用于所有模型的全局参数',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '创建者',
    `COMPLETED_AT` DATETIME NULL COMMENT '完成时间',
    `PROGRESS_PERCENTAGE` DECIMAL(5, 2) NULL COMMENT '完成百分比',
    `LAST_ACTIVITY_TIME` DATETIME NULL COMMENT '最后活动时间',
    `LAST_CHECK_TIME` DATETIME NULL COMMENT '最近一次检查时间',
    `RESUME_COUNT` INT NOT NULL DEFAULT 0 COMMENT '重启次数',
    `PAUSE_TIME` DATETIME NULL COMMENT '暂停时间',
    `PAUSE_REASON` TEXT NULL COMMENT '暂停原因',
    `ANSWER_REPEAT_COUNT` INT NOT NULL DEFAULT 1 COMMENT '每个问题获取回答的次数',
    `ERROR_MESSAGE` TEXT NULL COMMENT '错误信息',
    `PROCESSING_INSTANCE` VARCHAR(100) NULL COMMENT '处理实例标识，用于防止多进程同时处理同一批次',
    `LAST_PROCESSED_RUN_ID` BIGINT NULL COMMENT '上次处理到的MODEL_ANSWER_RUN的ID',
    FOREIGN KEY (`DATASET_VERSION_ID`) REFERENCES `DATASET_VERSIONS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`ANSWER_ASSEMBLY_CONFIG_ID`) REFERENCES `ANSWER_PROMPT_ASSEMBLY_CONFIGS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`SINGLE_CHOICE_PROMPT_ID`) REFERENCES `ANSWER_QUESTION_TYPE_PROMPTS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`MULTIPLE_CHOICE_PROMPT_ID`) REFERENCES `ANSWER_QUESTION_TYPE_PROMPTS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`SIMPLE_FACT_PROMPT_ID`) REFERENCES `ANSWER_QUESTION_TYPE_PROMPTS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`SUBJECTIVE_PROMPT_ID`) REFERENCES `ANSWER_QUESTION_TYPE_PROMPTS`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_ANSWER_GEN_BATCHES_STATUS` (`STATUS`),
    INDEX `IDX_ANSWER_GEN_BATCHES_DATASET` (`DATASET_VERSION_ID`),
    INDEX `IDX_ANSWER_GEN_BATCHES_TIME` (`CREATION_TIME`),
    INDEX `IDX_BATCHES_PROCESSING_INSTANCE` (`PROCESSING_INSTANCE`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='回答生成批次表';

-- 25. model_answer_runs (模型回答运行表)
DROP TABLE IF EXISTS `MODEL_ANSWER_RUNS`;
CREATE TABLE `MODEL_ANSWER_RUNS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '模型回答运行ID',
    `ANSWER_GENERATION_BATCH_ID` BIGINT NOT NULL COMMENT '所属的回答生成批次',
    `LLM_MODEL_ID` BIGINT NOT NULL COMMENT '生成回答的LLM模型',
    `RUN_NAME` VARCHAR(255) NOT NULL COMMENT '运行名称',
    `RUN_DESCRIPTION` TEXT NULL COMMENT '运行描述',
    `RUN_INDEX` INT NOT NULL DEFAULT 0 COMMENT '同一模型在批次中的运行索引，0表示第一次',
    `RUN_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '运行时间',
    `STATUS` ENUM('PENDING', 'GENERATING_ANSWERS', 'COMPLETED', 'FAILED', 'PAUSED') NOT NULL DEFAULT 'PENDING' COMMENT '运行状态',
    `PARAMETERS` JSON NULL COMMENT '运行参数，可覆盖批次的全局参数',
    `ERROR_MESSAGE` TEXT NULL COMMENT '如果失败，记录错误信息',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '发起回答生成的用户',
    `LAST_PROCESSED_QUESTION_ID` BIGINT NULL COMMENT '上次处理到的问题ID',
    `LAST_PROCESSED_QUESTION_INDEX` INT NULL COMMENT '上次处理到的问题在数据集中的索引',
    `PROGRESS_PERCENTAGE` DECIMAL(5, 2) NULL COMMENT '完成百分比',
    `LAST_ACTIVITY_TIME` DATETIME NULL COMMENT '最后活动时间',
    `RESUME_COUNT` INT NOT NULL DEFAULT 0 COMMENT '重启次数',
    `PAUSE_TIME` DATETIME NULL COMMENT '暂停时间',
    `PAUSE_REASON` TEXT NULL COMMENT '暂停原因',
    `COMPLETED_QUESTIONS_COUNT` INT NOT NULL DEFAULT 0 COMMENT '已完成问题数量',
    `TOTAL_QUESTIONS_COUNT` INT NULL COMMENT '总问题数量',
    `FAILED_QUESTIONS_COUNT` INT NOT NULL DEFAULT 0 COMMENT '失败的问题数量',
    `FAILED_QUESTIONS_IDS` JSON NULL COMMENT '失败的问题ID列表',
    FOREIGN KEY (`ANSWER_GENERATION_BATCH_ID`) REFERENCES `ANSWER_GENERATION_BATCHES`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`LLM_MODEL_ID`) REFERENCES `LLM_MODELS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    UNIQUE (`ANSWER_GENERATION_BATCH_ID`, `LLM_MODEL_ID`, `RUN_INDEX`) COMMENT '确保同一个批次中同一个模型的运行索引唯一',
    INDEX `IDX_MODEL_ANSWER_RUNS_STATUS` (`STATUS`),
    INDEX `IDX_MODEL_ANSWER_RUNS_BATCH_MODEL` (`ANSWER_GENERATION_BATCH_ID`, `LLM_MODEL_ID`),
    INDEX `IDX_MODEL_ANSWER_RUNS_PROGRESS` (`PROGRESS_PERCENTAGE`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='模型回答运行表';

-- 添加额外的外键约束 (依赖 MODEL_ANSWER_RUNS)
ALTER TABLE `ANSWER_GENERATION_BATCHES`
    ADD CONSTRAINT `FK_BATCHES_LAST_RUN` FOREIGN KEY (
        `LAST_PROCESSED_RUN_ID`
    )
        REFERENCES `MODEL_ANSWER_RUNS`(`ID`) ON DELETE SET NULL;

-- 27. llm_answers (LLM回答表)
DROP TABLE IF EXISTS `LLM_ANSWERS`;
CREATE TABLE `LLM_ANSWERS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT 'LLM回答ID',
    `MODEL_ANSWER_RUN_ID` BIGINT NOT NULL COMMENT '所属的模型回答运行',
    `DATASET_QUESTION_MAPPING_ID` BIGINT NOT NULL COMMENT '对应的数据集问题',
    `ANSWER_TEXT` TEXT NULL COMMENT 'LLM生成的答案文本',
    `GENERATION_STATUS` ENUM('SUCCESS', 'FAILED') NOT NULL COMMENT '生成状态',
    `ERROR_MESSAGE` TEXT NULL COMMENT '如果生成失败，记录错误信息',
    `GENERATION_TIME` DATETIME NULL COMMENT '答案生成时间',
    `PROMPT_USED` TEXT NULL COMMENT '生成答案时使用的prompt',
    `RAW_MODEL_RESPONSE` TEXT NULL COMMENT '模型的原始响应',
    `OTHER_METADATA` JSON NULL COMMENT '其他元数据',
    `REPEAT_INDEX` INT NOT NULL DEFAULT 0 COMMENT '重复回答的索引，0表示第一次',
    FOREIGN KEY (`MODEL_ANSWER_RUN_ID`) REFERENCES `MODEL_ANSWER_RUNS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`DATASET_QUESTION_MAPPING_ID`) REFERENCES `DATASET_QUESTION_MAPPING`(`ID`) ON DELETE CASCADE,
    INDEX `IDX_LLM_ANSWERS_RUN_STATUS` (`MODEL_ANSWER_RUN_ID`, `GENERATION_STATUS`),
    INDEX `IDX_LLM_ANSWERS_QUESTION` (`DATASET_QUESTION_MAPPING_ID`),
    INDEX `IDX_LLM_ANSWERS_TIME` (`GENERATION_TIME`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='LLM回答表';

-- 30. evaluation_criteria (评测标准表)
DROP TABLE IF EXISTS `EVALUATION_CRITERIA`;
CREATE TABLE `EVALUATION_CRITERIA` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评测标准ID',
    `NAME` VARCHAR(255) NOT NULL COMMENT '标准名称',
    `VERSION` VARCHAR(255) NULL COMMENT '标准版本',
    `DESCRIPTION` TEXT NULL COMMENT '标准描述',
    `DATA_TYPE` ENUM('SCORE', 'BOOLEAN', 'TEXT', 'CATEGORICAL') NOT NULL COMMENT '评分数据类型',
    `SCORE_RANGE` VARCHAR(255) NULL COMMENT '如果是分值类型，定义分值范围',
    `APPLICABLE_QUESTION_TYPES` JSON NULL COMMENT '适用的问题类型列表',
    `IS_REQUIRED` BOOLEAN NOT NULL DEFAULT FALSE COMMENT '是否为必选评测标准',
    `ORDER_INDEX` INT NOT NULL DEFAULT 0 COMMENT '标准排序顺序',
    `WEIGHT` DECIMAL(5, 2) NOT NULL DEFAULT 1.0 COMMENT '评分权重',
    `QUESTION_TYPE` ENUM('SINGLE_CHOICE', 'MULTIPLE_CHOICE', 'SIMPLE_FACT', 'SUBJECTIVE') NULL COMMENT '适用的问题类型',
    `OPTIONS` JSON NULL COMMENT '如果是分类类型，定义可选项',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `CREATED_BY_USER_ID` BIGINT NOT NULL COMMENT '创建者用户ID',
    `PARENT_CRITERION_ID` BIGINT NULL COMMENT '父标准ID，用于版本控制',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此标准的 change_log 条目',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`PARENT_CRITERION_ID`) REFERENCES `EVALUATION_CRITERIA`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_EVAL_CRITERIA_TYPE` (`DATA_TYPE`),
    INDEX `IDX_EVAL_CRITERIA_QUESTION_TYPE` (`QUESTION_TYPE`),
    INDEX `IDX_EVAL_CRITERIA_DELETED` (`DELETED_AT`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='评测标准表';

-- 31. evaluators (评测员/裁判模型表)
DROP TABLE IF EXISTS `EVALUATORS`;
CREATE TABLE `EVALUATORS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评测员/裁判ID',
    `EVALUATOR_TYPE` ENUM('HUMAN', 'AI_MODEL') NOT NULL COMMENT '评测员类型',
    `USER_ID` BIGINT NULL COMMENT '如果是人类评测员，关联到用户表',
    `LLM_MODEL_ID` BIGINT NULL COMMENT '如果是AI评测员，关联到模型表',
    `NAME` VARCHAR(255) NOT NULL COMMENT '评测员名称',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '创建者用户ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此评测员记录的 change_log 条目',
    `DELETED_AT` DATETIME NULL COMMENT '软删除标记',
    FOREIGN KEY (`USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`LLM_MODEL_ID`) REFERENCES `LLM_MODELS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='评测员/裁判模型表';

-- 29. evaluation_runs (评测运行表)
DROP TABLE IF EXISTS `EVALUATION_RUNS`;
CREATE TABLE `EVALUATION_RUNS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评测运行ID',
    `MODEL_ANSWER_RUN_ID` BIGINT NOT NULL COMMENT '关联的模型回答运行',
    `EVALUATOR_ID` BIGINT NOT NULL COMMENT '评测员/裁判ID',
    `RUN_NAME` VARCHAR(255) NOT NULL COMMENT '评测运行名称',
    `RUN_DESCRIPTION` TEXT NULL COMMENT '评测运行描述',
    `RUN_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '运行开始时间',
    `START_TIME` DATETIME NULL COMMENT '评测实际开始时间',
    `END_TIME` DATETIME NULL COMMENT '评测实际结束时间',
    `STATUS` ENUM('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PAUSED', 'RESUMING') NOT NULL DEFAULT 'PENDING' COMMENT '运行状态',
    `PARAMETERS` JSON NULL COMMENT '评测参数',
    `EVALUATION_ASSEMBLY_CONFIG_ID` BIGINT NULL COMMENT '评测阶段使用的prompt组装配置',
    `SUBJECTIVE_PROMPT_ID` BIGINT NULL COMMENT '主观题评测prompt ID',
    `ERROR_MESSAGE` TEXT NULL COMMENT '如果失败，记录错误信息',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '发起评测的用户',
    `LAST_PROCESSED_ANSWER_ID` BIGINT NULL COMMENT '上次处理到的回答ID',
    `PROGRESS_PERCENTAGE` DECIMAL(5, 2) NULL COMMENT '完成百分比',
    `LAST_ACTIVITY_TIME` DATETIME NULL COMMENT '最后活动时间',
    `COMPLETED_ANSWERS_COUNT` INT NOT NULL DEFAULT 0 COMMENT '已完成评测的回答数量',
    `TOTAL_ANSWERS_COUNT` INT NULL COMMENT '总回答数量',
    `FAILED_EVALUATIONS_COUNT` INT NOT NULL DEFAULT 0 COMMENT '失败的评测数量',
    `RESUME_COUNT` INT NOT NULL DEFAULT 0 COMMENT '重启次数',
    `COMPLETED_AT` DATETIME NULL COMMENT '完成时间',
    `PAUSE_REASON` VARCHAR(255) NULL COMMENT '暂停原因',
    `PAUSE_TIME` DATETIME NULL COMMENT '暂停时间',
    `PAUSED_BY_USER_ID` BIGINT NULL COMMENT '暂停操作的用户ID',
    `TIMEOUT_SECONDS` INT NULL DEFAULT 3600 COMMENT '超时时间（秒）',
    `IS_AUTO_RESUME` BOOLEAN NOT NULL DEFAULT FALSE COMMENT '是否自动恢复',
    `AUTO_CHECKPOINT_INTERVAL` INT NULL DEFAULT 60 COMMENT '自动创建检查点的间隔（秒）',
    `CURRENT_BATCH_START_ID` BIGINT NULL COMMENT '当前批次起始回答ID',
    `CURRENT_BATCH_END_ID` BIGINT NULL COMMENT '当前批次结束回答ID',
    `BATCH_SIZE` INT NULL DEFAULT 50 COMMENT '每批处理的回答数量',
    `RETRY_COUNT` INT NOT NULL DEFAULT 0 COMMENT '当前批次重试次数',
    `MAX_RETRIES` INT NULL DEFAULT 3 COMMENT '最大重试次数',
    `LAST_ERROR_TIME` DATETIME NULL COMMENT '最后一次错误时间',
    `CONSECUTIVE_ERRORS` INT NOT NULL DEFAULT 0 COMMENT '连续错误次数',
    `LAST_UPDATED` DATETIME NULL COMMENT '最后更新时间',
    FOREIGN KEY (`MODEL_ANSWER_RUN_ID`) REFERENCES `MODEL_ANSWER_RUNS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`EVALUATOR_ID`) REFERENCES `EVALUATORS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`PAUSED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`EVALUATION_ASSEMBLY_CONFIG_ID`) REFERENCES `EVALUATION_PROMPT_ASSEMBLY_CONFIGS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`SUBJECTIVE_PROMPT_ID`) REFERENCES `EVALUATION_SUBJECTIVE_PROMPTS`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_EVALUATION_RUNS_STATUS` (`STATUS`),
    INDEX `IDX_EVALUATION_RUNS_ANSWER_RUN` (`MODEL_ANSWER_RUN_ID`),
    INDEX `IDX_EVALUATION_RUNS_PROGRESS` (`PROGRESS_PERCENTAGE`),
    INDEX `IDX_EVALUATION_RUNS_BATCH` (`CURRENT_BATCH_START_ID`, `CURRENT_BATCH_END_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='评测运行表';

-- 28. evaluations (评测结果表)
DROP TABLE IF EXISTS `EVALUATIONS`;
CREATE TABLE `EVALUATIONS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评测结果ID',
    `LLM_ANSWER_ID` BIGINT NOT NULL COMMENT '关联的LLM回答ID',
    `EVALUATOR_ID` BIGINT NOT NULL COMMENT '评测员/裁判ID',
    `EVALUATION_RUN_ID` BIGINT NULL COMMENT '关联的评测运行ID',
    `EVALUATION_TYPE` ENUM('MANUAL', 'AUTO', 'AI_MODEL') NOT NULL DEFAULT 'AI_MODEL' COMMENT '评测类型',
    `OVERALL_SCORE` DECIMAL(5, 2) NULL COMMENT '总体评分',
    `EVALUATION_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '评测时间',
    `EVALUATION_STATUS` ENUM('SUCCESS', 'FAILED', 'PENDING', 'PROCESSING') NOT NULL DEFAULT 'PENDING' COMMENT '评测状态',
    `ERROR_MESSAGE` TEXT NULL COMMENT '如果评测失败，记录错误信息',
    `EVALUATION_RESULTS` JSON NULL COMMENT '详细评测结果，包含各评测标准的得分',
    `PROMPT_USED` TEXT NULL COMMENT '评测使用的prompt',
    `COMMENTS` TEXT NULL COMMENT '评测员的补充说明或建议',
    `RAW_EVALUATOR_RESPONSE` TEXT NULL COMMENT '评测员/裁判的原始响应',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '发起评测的用户ID',
    `CREATED_CHANGE_LOG_ID` BIGINT NULL COMMENT '关联到创建此评测的change_log条目',
    `CREATION_TIME` DATETIME NULL COMMENT '创建时间',
    `COMPLETION_TIME` DATETIME NULL COMMENT '完成时间',
    
    /* 从ANSWER_SCORES表合并的字段 */
    `RAW_SCORE` DECIMAL(10, 2) NULL COMMENT '原始分数',
    `NORMALIZED_SCORE` DECIMAL(10, 2) NULL COMMENT '标准化分数（0-100）',
    `WEIGHTED_SCORE` DECIMAL(10, 2) NULL COMMENT '加权分数',
    `SCORE_TYPE` VARCHAR(50) NULL COMMENT '分数类型（例如：客观题得分、主观题得分、综合得分）',
    `SCORING_METHOD` VARCHAR(100) NULL COMMENT '评分方法',
    
    FOREIGN KEY (`LLM_ANSWER_ID`) REFERENCES `LLM_ANSWERS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`EVALUATOR_ID`) REFERENCES `EVALUATORS`(`ID`) ON DELETE RESTRICT,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_CHANGE_LOG_ID`) REFERENCES `CHANGE_LOG`(`ID`) ON DELETE SET NULL,
    UNIQUE KEY `UK_EVALUATIONS_ANSWER_EVALUATOR` (`LLM_ANSWER_ID`, `EVALUATOR_ID`) COMMENT '确保一个回答只能被同一评测者评测一次',
    INDEX `IDX_EVALUATIONS_ANSWER` (`LLM_ANSWER_ID`),
    INDEX `IDX_EVALUATIONS_EVALUATOR` (`EVALUATOR_ID`),
    INDEX `IDX_EVALUATIONS_TYPE` (`EVALUATION_TYPE`),
    INDEX `IDX_EVALUATIONS_STATUS` (`EVALUATION_STATUS`),
    INDEX `IDX_EVALUATIONS_SCORE` (`OVERALL_SCORE`),
    INDEX `IDX_EVALUATIONS_TIME` (`EVALUATION_TIME`),
    INDEX `IDX_EVALUATIONS_SCORE_TYPE` (`SCORE_TYPE`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='评测结果表';

-- 添加外键约束 (依赖 EVALUATION_RUNS)
ALTER TABLE `EVALUATIONS`
    ADD CONSTRAINT `FK_EVALUATIONS_RUN` FOREIGN KEY (
        `EVALUATION_RUN_ID`
    )
        REFERENCES `EVALUATION_RUNS`(`ID`) ON DELETE SET NULL;

-- 32. evaluation_details (评测详情表)
DROP TABLE IF EXISTS `EVALUATION_DETAILS`;
CREATE TABLE `EVALUATION_DETAILS` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评测详情ID',
    `EVALUATION_ID` BIGINT NOT NULL COMMENT '关联的评测ID',
    `CRITERION_ID` BIGINT NULL COMMENT '关联的评测标准ID',
    `CRITERION_NAME` VARCHAR(255) NOT NULL COMMENT '评测标准名称',
    `SCORE` DECIMAL(10, 2) NULL COMMENT '该标准的得分',
    `COMMENTS` TEXT NULL COMMENT '该标准的评语',
    `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    FOREIGN KEY (`EVALUATION_ID`) REFERENCES `EVALUATIONS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`CRITERION_ID`) REFERENCES `EVALUATION_CRITERIA`(`ID`) ON DELETE SET NULL,
    INDEX `IDX_EVALUATION_DETAILS_EVALUATION` (`EVALUATION_ID`),
    INDEX `IDX_EVALUATION_DETAILS_CRITERION` (`CRITERION_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='评测详情表';

-- 33. model_batch_scores (模型批次评分表)
DROP TABLE IF EXISTS `MODEL_BATCH_SCORES`;
CREATE TABLE `MODEL_BATCH_SCORES` (
    `ID` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '模型批次评分ID',
    `BATCH_ID` BIGINT NOT NULL COMMENT '所属的回答生成批次ID',
    `MODEL_ID` BIGINT NOT NULL COMMENT 'LLM模型ID',
    `EVALUATOR_ID` BIGINT NULL COMMENT '评测者ID（可选，为NULL表示综合多个评测者）',
    `SCORE_TYPE` VARCHAR(50) NOT NULL COMMENT '评分类型（如"OVERALL", "ACCURACY", "COMPLETENESS"等）',
    `AVERAGE_SCORE` DECIMAL(5, 2) NOT NULL COMMENT '平均分数',
    `TOTAL_ANSWERS` INT NOT NULL DEFAULT 0 COMMENT '总回答数',
    `SCORED_ANSWERS` INT NOT NULL DEFAULT 0 COMMENT '已评分回答数',
    `MAX_SCORE` DECIMAL(5, 2) NULL COMMENT '最高分',
    `MIN_SCORE` DECIMAL(5, 2) NULL COMMENT '最低分',
    `SCORE_DISTRIBUTION` JSON NULL COMMENT '分数分布统计',
    `CALCULATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '计算时间',
    `UPDATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    `CREATED_BY_USER_ID` BIGINT NULL COMMENT '创建用户ID',
    `REPEAT_INDEX` INT NULL COMMENT '回答重复索引（-1表示所有重复索引的平均）',
    FOREIGN KEY (`BATCH_ID`) REFERENCES `ANSWER_GENERATION_BATCHES`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`MODEL_ID`) REFERENCES `LLM_MODELS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`EVALUATOR_ID`) REFERENCES `EVALUATORS`(`ID`) ON DELETE SET NULL,
    FOREIGN KEY (`CREATED_BY_USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE SET NULL,
    UNIQUE KEY `UK_MODEL_BATCH_SCORES` (`BATCH_ID`, `MODEL_ID`, `EVALUATOR_ID`, `SCORE_TYPE`, `REPEAT_INDEX`),
    INDEX `IDX_MODEL_BATCH_SCORES_BATCH` (`BATCH_ID`),
    INDEX `IDX_MODEL_BATCH_SCORES_MODEL` (`MODEL_ID`),
    INDEX `IDX_MODEL_BATCH_SCORES_TYPE` (`SCORE_TYPE`),
    INDEX `IDX_MODEL_BATCH_SCORES_CALC_TIME` (`CALCULATED_AT`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4 COLLATE=UTF8MB4_UNICODE_CI COMMENT='模型批次评分表';

-- =============================================
-- 性能优化视图
-- =============================================

-- 评测结果摘要视图
CREATE OR REPLACE VIEW `EVALUATION_SUMMARY` AS
    SELECT
        MAR.ID                        AS `RUN_ID`,
        MAR.RUN_NAME,
        LM.NAME                       AS `MODEL_NAME`,
        LM.PROVIDER                   AS `MODEL_PROVIDER`,
        DV.NAME                       AS `DATASET_NAME`,
        DV.VERSION_NUMBER             AS `DATASET_VERSION`,
        MAR.STATUS                    AS `RUN_STATUS`,
        MAR.PROGRESS_PERCENTAGE,
        MAR.COMPLETED_QUESTIONS_COUNT,
        MAR.TOTAL_QUESTIONS_COUNT,
        MAR.FAILED_QUESTIONS_COUNT,
        COUNT(DISTINCT LA.ID)         AS `TOTAL_ANSWERS`,
        COUNT(DISTINCT E.ID)          AS `TOTAL_EVALUATIONS`,
        AVG(E.OVERALL_SCORE)          AS `AVG_OVERALL_SCORE`,
        MAR.RUN_TIME,
        MAR.LAST_ACTIVITY_TIME
    FROM
        `MODEL_ANSWER_RUNS`         MAR
        JOIN `LLM_MODELS` LM
        ON MAR.LLM_MODEL_ID = LM.ID
        JOIN `ANSWER_GENERATION_BATCHES` AGB
        ON MAR.ANSWER_GENERATION_BATCH_ID = AGB.ID
        JOIN `DATASET_VERSIONS` DV
        ON AGB.DATASET_VERSION_ID = DV.ID
        LEFT JOIN `LLM_ANSWERS` LA
        ON MAR.ID = LA.MODEL_ANSWER_RUN_ID
        LEFT JOIN `EVALUATIONS` E
        ON LA.ID = E.LLM_ANSWER_ID
    GROUP BY
        MAR.ID,
        MAR.RUN_NAME,
        LM.NAME,
        LM.PROVIDER,
        DV.NAME,
        DV.VERSION_NUMBER,
        MAR.STATUS,
        MAR.PROGRESS_PERCENTAGE,
        MAR.COMPLETED_QUESTIONS_COUNT,
        MAR.TOTAL_QUESTIONS_COUNT,
        MAR.FAILED_QUESTIONS_COUNT,
        MAR.RUN_TIME,
        MAR.LAST_ACTIVITY_TIME;

-- 题目评测汇总视图（按题目汇总评测结果）
CREATE OR REPLACE VIEW `QUESTION_EVALUATION_SUMMARY` AS
    SELECT
        SQ.ID                         AS `QUESTION_ID`,
        SQ.QUESTION_TEXT,
        SQ.QUESTION_TYPE,
        DQM.ID                        AS `DATASET_QUESTION_MAPPING_ID`,
        DV.ID                         AS `DATASET_VERSION_ID`,
        DV.NAME                       AS `DATASET_NAME`,
        DV.VERSION_NUMBER             AS `DATASET_VERSION`,
        MAR.ID                        AS `MODEL_RUN_ID`,
        MAR.RUN_NAME                  AS `MODEL_RUN_NAME`,
        LM.ID                         AS `MODEL_ID`,
        LM.NAME                       AS `MODEL_NAME`,
        LM.PROVIDER                   AS `MODEL_PROVIDER`,
        EVA.ID                        AS `EVALUATOR_ID`,
        EVA.NAME                      AS `EVALUATOR_NAME`,
        EVA.EVALUATOR_TYPE,
        MAX(LA.REPEAT_INDEX)          AS `MAX_REPEAT_INDEX`,
        COUNT(DISTINCT LA.ID)         AS `ANSWER_COUNT`,
        COUNT(DISTINCT E.ID)          AS `EVALUATION_COUNT`,
        AVG(E.OVERALL_SCORE)          AS `AVG_SCORE`,
        MAX(E.OVERALL_SCORE)          AS `MAX_SCORE`,
        MIN(E.OVERALL_SCORE)          AS `MIN_SCORE`,
        MAX(E.EVALUATION_TIME)        AS `LATEST_EVALUATION_TIME`
    FROM
        `STANDARD_QUESTIONS` SQ
        JOIN `DATASET_QUESTION_MAPPING` DQM ON SQ.ID = DQM.STANDARD_QUESTION_ID
        JOIN `DATASET_VERSIONS` DV ON DQM.DATASET_VERSION_ID = DV.ID
        JOIN `LLM_ANSWERS` LA ON DQM.ID = LA.DATASET_QUESTION_MAPPING_ID
        JOIN `MODEL_ANSWER_RUNS` MAR ON LA.MODEL_ANSWER_RUN_ID = MAR.ID
        JOIN `LLM_MODELS` LM ON MAR.LLM_MODEL_ID = LM.ID
        LEFT JOIN `EVALUATIONS` E ON LA.ID = E.LLM_ANSWER_ID
        LEFT JOIN `EVALUATORS` EVA ON E.EVALUATOR_ID = EVA.ID
    WHERE
        E.EVALUATION_STATUS = 'SUCCESS'
    GROUP BY
        SQ.ID,
        SQ.QUESTION_TEXT,
        SQ.QUESTION_TYPE,
        DQM.ID,
        DV.ID,
        DV.NAME,
        DV.VERSION_NUMBER,
        MAR.ID,
        MAR.RUN_NAME,
        LM.ID,
        LM.NAME,
        LM.PROVIDER,
        EVA.ID,
        EVA.NAME,
        EVA.EVALUATOR_TYPE;

-- 题目评测详情视图（包含最新/最佳回答的详细评测结果）
CREATE OR REPLACE VIEW `QUESTION_BEST_EVALUATION` AS
    WITH RankedAnswers AS (
        SELECT
            LA.ID AS `ANSWER_ID`,
            LA.DATASET_QUESTION_MAPPING_ID,
            LA.MODEL_ANSWER_RUN_ID,
            E.ID AS `EVALUATION_ID`,
            E.OVERALL_SCORE,
            E.EVALUATOR_ID,
            ROW_NUMBER() OVER (
                PARTITION BY LA.DATASET_QUESTION_MAPPING_ID, LA.MODEL_ANSWER_RUN_ID, E.EVALUATOR_ID
                ORDER BY E.OVERALL_SCORE DESC, LA.REPEAT_INDEX DESC
            ) AS `RANK_BY_SCORE`
        FROM
            `LLM_ANSWERS` LA
            JOIN `EVALUATIONS` E ON LA.ID = E.LLM_ANSWER_ID
        WHERE
            E.EVALUATION_STATUS = 'SUCCESS'
    )
    SELECT
        SQ.ID AS `QUESTION_ID`,
        SQ.QUESTION_TEXT,
        SQ.QUESTION_TYPE,
        DQM.ID AS `DATASET_QUESTION_MAPPING_ID`,
        MAR.ID AS `MODEL_RUN_ID`,
        LM.NAME AS `MODEL_NAME`,
        EVA.ID AS `EVALUATOR_ID`,
        EVA.NAME AS `EVALUATOR_NAME`,
        LA.ID AS `ANSWER_ID`,
        LA.ANSWER_TEXT,
        LA.REPEAT_INDEX,
        E.ID AS `EVALUATION_ID`,
        E.OVERALL_SCORE,
        E.COMMENTS,
        E.EVALUATION_TIME,
        JSON_EXTRACT(E.EVALUATION_RESULTS, '$.criteria_scores') AS `CRITERIA_SCORES`
    FROM
        RankedAnswers RA
        JOIN `LLM_ANSWERS` LA ON RA.ANSWER_ID = LA.ID
        JOIN `DATASET_QUESTION_MAPPING` DQM ON LA.DATASET_QUESTION_MAPPING_ID = DQM.ID
        JOIN `STANDARD_QUESTIONS` SQ ON DQM.STANDARD_QUESTION_ID = SQ.ID
        JOIN `MODEL_ANSWER_RUNS` MAR ON LA.MODEL_ANSWER_RUN_ID = MAR.ID
        JOIN `LLM_MODELS` LM ON MAR.LLM_MODEL_ID = LM.ID
        JOIN `EVALUATIONS` E ON RA.EVALUATION_ID = E.ID
        JOIN `EVALUATORS` EVA ON E.EVALUATOR_ID = EVA.ID
    WHERE
        RA.RANK_BY_SCORE = 1;

-- 创建批次模型得分汇总视图
CREATE OR REPLACE VIEW `MODEL_BATCH_SCORE_SUMMARY` AS
SELECT
    AGB.ID AS `BATCH_ID`,
    AGB.NAME AS `BATCH_NAME`,
    LM.ID AS `MODEL_ID`,
    LM.NAME AS `MODEL_NAME`,
    LM.PROVIDER AS `MODEL_PROVIDER`,
    LM.VERSION AS `MODEL_VERSION`,
    EVA.ID AS `EVALUATOR_ID`,
    EVA.NAME AS `EVALUATOR_NAME`,
    MBS.SCORE_TYPE,
    MBS.AVERAGE_SCORE,
    MBS.TOTAL_ANSWERS,
    MBS.SCORED_ANSWERS,
    MBS.MAX_SCORE,
    MBS.MIN_SCORE,
    MBS.REPEAT_INDEX,
    MBS.CALCULATED_AT,
    MBS.UPDATED_AT
FROM
    `MODEL_BATCH_SCORES` MBS
    JOIN `ANSWER_GENERATION_BATCHES` AGB ON MBS.BATCH_ID = AGB.ID
    JOIN `LLM_MODELS` LM ON MBS.MODEL_ID = LM.ID
    LEFT JOIN `EVALUATORS` EVA ON MBS.EVALUATOR_ID = EVA.ID
ORDER BY
    AGB.ID, LM.ID, MBS.SCORE_TYPE, MBS.REPEAT_INDEX;

-- 请参考 insert_sample_data.sql 文件获取示例数据



